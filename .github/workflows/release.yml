name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        ghc:
          - "8.8.3"
          - "8.10.1"
        cabal: ["3.2"]
        exclude:
          - os: windows-latest
            ghc: 8.8.3

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set tag name
        uses: olegtarasov/get-tag@v2
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Cache stack global package db
        id:   stack-global
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-global-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
               ${{ runner.os }}-stack-global-${{ matrix.plan.ghc }}

      - name: Cache stack-installed programs in ~/.local/bin
        id:   stack-programs
        uses: actions/cache@v2
        with:
          path: ~/.local/bin
          key: ${{ runner.os }}-stack-programs-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
               ${{ runner.os }}-stack-programs-${{ matrix.plan.ghc }}

      - name: Cache .stack-work
        uses: actions/cache@v2
        with:
          path: .stack-work
          key: ${{ runner.os }}-stack-work-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
               ${{ runner.os }}-stack-work-${{ matrix.plan.ghc }}

      - name: 'Set up HLint'
        uses: rwe/actions-hlint-setup@v1
        with:
          version: '3.1.6'

      - name: 'Run HLint'
        uses: rwe/actions-hlint-run@v2
        with:
          path: src/
          fail-on: warning

      - name: Run stack build
        run: stack build

      - name: Run stack test
        run: stack test

      - name: Set binary path name
        run: echo "BINARY_PATH=$(stack path --local-install-root --system-ghc)/bin" >> $GITHUB_ENV 

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ${{ env.BINARY_PATH }}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: stan-${{ steps.tag.outputs.tag }}-${{ runner.os }}-ghc-${{ matrix.ghc }}${{ env.EXT }}
          asset_content_type: application/octet-stream
